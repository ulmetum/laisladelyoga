---
import { Image } from 'astro:assets'
import 'swiper/css'

import Yoga01 from '@/images/yoga-01.webp'
import Yoga02 from '@/images/yoga-02.webp'
import Yoga03 from '@/images/yoga-03.webp'
---

<div
	class="mx-auto flex max-w-[440px] flex-col gap-2 xl:absolute xl:right-[-4%] xl:top-[.5rem] xl:h-[275px] xl:max-w-[350px]"
>
	<div class="swiper mySwiper">
		<div class="swiper-wrapper">
			<div class="swiper-slide">
				<Image class="object-cover" src={Yoga01} alt="yoga image 01" width="400" height="200" />
			</div>
			<div class="swiper-slide">
				<Image class="object-cover" src={Yoga02} alt="yoga image 02" width="400" height="200" />
			</div>
			<div class="swiper-slide">
				<Image class="object-cover" src={Yoga03} alt="yoga image 03" width="400" height="200" />
			</div>
		</div>
	</div>
	<div class="swiper-pagination flex justify-start xl:justify-end"></div>
</div>

<script>
	import Swiper from 'swiper'
	import { Pagination, Autoplay, EffectFade } from 'swiper/modules'

	document.addEventListener('astro:page-load', () => {
		const swiper = new Swiper('.swiper', {
			centeredSlides: true,
			slidesPerView: 1,
			loop: true,
			speed: 600,
			autoplay: {
				pauseOnMouseEnter: true,
				delay: 2000,
				disableOnInteraction: true
			},
			pagination: {
				el: '.swiper-pagination',
				type: 'custom',
				renderCustom: function (swiper, current, total) {
					// Crea un contenedor para los elementos
					return `
							<div class="flex items-center gap-2 justify-center">
								<span class="font-heading swiper-pagination-current xl:text-sm">${current}</span>
								<div class="autoplay-progress">
										<svg width="100" height="2" xmlns="http://www.w3.org/2000/svg">
												<rect width="100" height="2" class="progress-background" fill="lightgray"></rect>
												<rect width="100" height="2" class="progress-bar" fill="var(--primary)" width="0"></rect>
										</svg>
								</div>
								<span class="font-heading swiper-pagination-total xl:text-sm">${total}</span>
							</div>
					`
				}
			},
			on: {
				autoplayTimeLeft(s, time, progress) {
					const roundedProgress = Math.round((1 - progress) * 100) // Redondea el progreso al valor m√°s cercano.
					const progressBar = document.querySelector(
						'.autoplay-progress .progress-bar'
					) as SVGRectElement

					if (!progressBar) return
					progressBar.setAttribute('width', `${roundedProgress}`)
					// console.log('Progress width:', roundedProgress)
					// progressContent.textContent = `${Math.ceil(time / 1000)}s`
				}
			},
			modules: [Pagination, Autoplay, EffectFade]
		})
	})
</script>

<style>
	.swiper {
		width: 100%;
		height: 300px;
	}

	.swiper-slide {
		text-align: center;
		font-size: 18px;
		background: #fff;
		display: flex;
		justify-content: center;
		align-items: center;
		transition-timing-function: var(--ease);
	}

	.swiper-slide img {
		display: block;
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.swiper-pagination span {
		position: relative;
		color: var(--text);
	}

	.autoplay-progress {
		position: absolute;
		right: 16px;
		bottom: 16px;
		z-index: 10;
		width: 100px;
		height: 3px; /* Suficiente altura para ver la barra */
		display: flex;
		align-items: center;
		justify-content: center;
		font-weight: bold;
		color: var(--swiper-theme-color);
	}

	.autoplay-progress svg {
		width: 100%; /* Asegura que el SVG ocupe todo el contenedor */
		height: 100%; /* Asegura que tenga suficiente altura */
	}

	.progress-background {
		width: 100%;
		height: 100%;
		fill: lightgray; /* Color de fondo de la barra */
	}

	.progress-bar {
		height: 100%;
		fill: var(--primary); /* Color de la barra de progreso */
		/* transition: width 0.3s ease-out;  */
	}
</style>
