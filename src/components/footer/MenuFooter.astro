---
const menuItems = [
	{ label: 'Inicio', url: '/' },
	{ label: 'Sobre Mí', url: '/sobre-mi' },
	{ label: 'Contacto', url: '/contacto' },
	{ label: 'Blog', url: '/blog' }
]

const currentPath = Astro.url.pathname
---

<nav id="menu-footer" class="text-right md:order-1 md:w-3/5 md:justify-between">
	<ul>
		{
			menuItems.map((item) => (
				<li
					class:list={[
						'',
						{
							'pointer-events-none': currentPath === item.url
						}
					]}
				>
					<a href={item.url} class="font-heading text-2xl font-light uppercase">
						{item.label.split('').map((char, i) => (
							<span
								class:list={[
									'inline-block font-heading text-2xl font-normal uppercase',
									{
										'text-amber-700': currentPath === item.url
									}
								]}
							>
								{char === ' ' ? '\u00A0' : char}
							</span>
						))}
					</a>
				</li>
			))
		}
	</ul>
</nav>

<script>
	import { animate, stagger } from 'motion'
	document.addEventListener('astro:page-load', () => {
		const menuFooter = document.getElementById('menu-footer') as HTMLElement
		const links = [...menuFooter.querySelectorAll('a')]

		const animateElements = (el: HTMLElement[], color: string, staggerTime: number) => {
			animate(el, { color: color }, { delay: stagger(staggerTime), easing: [0.83, 0, 0.17, 1] })
		}

		links.forEach((link) => {
			let isHovered = false
			link.addEventListener('mouseenter', () => {
				if (!isHovered) {
					// Solo animar si no está en hover
					isHovered = true
					const spans = [...link.querySelectorAll('span')]
					animateElements(spans, 'var(--amber-700-rgb)', 0.05)
				}
			})

			link.addEventListener('mouseleave', () => {
				isHovered = false // Cuando salga del área, se puede volver a animar
				const spans = [...link.querySelectorAll('span')]

				animateElements(spans, 'var(--zinc-900-rgb)', 0.05)
			})
		})
	})
</script>
