---
import type { GetStaticPaths } from 'astro'
import { actions } from 'astro:actions'

import MainLayout from '@/layouts/MainLayout.astro'
import Container from '@/components/Container.astro'
import PaginationBlog from '@/components/blog/PaginationBlog.astro'
import Post from '@/components/blog/Post.astro'
import SearchBar from '@/components/SearchBar.astro'

export const getStaticPaths = (async ({ paginate }) => {
	const { data, error } = await actions.getAllArticles()

	if (error) {
		throw new Error('Hubo un error al obtener los artículos')
	}

	const articles = data?.articles.data ?? []
	return paginate(articles, { pageSize: 4, props: { articles } })
}) satisfies GetStaticPaths

const { page, articles } = Astro.props

// console.log({ articles })
---

<MainLayout
	description="Pagina de Blog del sitio web La isla del Yoga. Este blog contendrá artículos interesantes con temática relacionada con el yoga, la meditación, la salud, etc."
	title="Blog | La isla del Yoga"
>
	<section class="bg-white px-1 pb-4 pt-[calc(var(--header-height)+1rem)] shadow-b-section">
		<Container className="post my-10">
			<div class="mx-auto mb-12 w-[min(100%,1440px)] max-[1440px]:px-4">
				<SearchBar id="search" className="pagefind-ui" uiOptions={{ showImages: true }} />
			</div>
			<ul class="grid-blog">
				{
					page.data.map(({ slug, title, featuredImage, excerpt, createdAt, writer }, i) => (
						<Post
							i={i}
							slug={slug}
							title={title}
							featuredImage={featuredImage}
							excerpt={excerpt}
							createdAt={createdAt}
							writer={writer}
						/>
					))
				}
			</ul>
			<!-- Pagination -->
			<PaginationBlog page={page} />
		</Container>
	</section>

	<style>
		@media (width >= 1280px) {
			.grid-blog {
				display: grid;
				gap: 2.5rem;
				grid-template-columns: repeat(3, 1fr);
				grid-template-rows: repeat(3, 35dvh);
				grid-template-areas:
					'top top top'
					'left center right'
					'left center right';
			}
		}
	</style>

	<script>
		import type { Datum } from '@/interfaces'

		const searchInput = document.getElementById('search-input') as HTMLInputElement
		const searchBtn = document.getElementById('search-btn') as HTMLButtonElement

		const articles = JSON.parse(searchInput.dataset.infoArticle!) as Datum[]

		searchInput.addEventListener('keyup', () => {
			const valueInputSearch = searchInput.value
			console.log({ articles, valueInputSearch })
			const filteredArticles = articles.filter((article) =>
				article.title.toLowerCase().includes(valueInputSearch.toLowerCase())
			)
			console.log({ filteredArticles })
		})
	</script>
</MainLayout>
